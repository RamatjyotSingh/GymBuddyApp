-- Drop tables in the correct order to avoid foreign key constraint violations
DROP TABLE IF EXISTS PUBLIC.SESSION_ITEMS;
DROP TABLE IF EXISTS PUBLIC.WORKOUT_ITEMS;
DROP TABLE IF EXISTS PUBLIC.WORKOUTSESSION;
DROP TABLE IF EXISTS PUBLIC.WORKOUTPROFILE;
DROP TABLE IF EXISTS PUBLIC.EXERCISE_TAGS;
DROP TABLE IF EXISTS PUBLIC.INSTRUCTION;
DROP TABLE IF EXISTS PUBLIC.EXERCISE;
DROP TABLE IF EXISTS PUBLIC.TAGS;

-- Create Exercise table
CREATE MEMORY TABLE PUBLIC.EXERCISE (
    EXERCISE_ID INTEGER NOT NULL PRIMARY KEY,
    NAME VARCHAR(255),
    IMAGE_PATH VARCHAR(255),
    IS_TIME_BASED BOOLEAN NOT NULL,
    HAS_WEIGHT BOOLEAN NOT NULL
);

-- Create Instruction table
CREATE MEMORY TABLE PUBLIC.INSTRUCTION (
    INSTRUCTION_ID INTEGER NOT NULL PRIMARY KEY,
    EXERCISE_ID INTEGER NOT NULL,
    STEP_NUMBER INTEGER NOT NULL,
    TEXT VARCHAR(500) NOT NULL,
    CONSTRAINT FK_INSTRUCTION_EXERCISE FOREIGN KEY (EXERCISE_ID) REFERENCES PUBLIC.EXERCISE(EXERCISE_ID) ON DELETE CASCADE
);

-- Create Tags table with type, text color, and background color
CREATE MEMORY TABLE PUBLIC.TAGS (
    TAG_ID INTEGER NOT NULL PRIMARY KEY,
    TAG_NAME VARCHAR(50) NOT NULL,
    TAG_TYPE VARCHAR(20) NOT NULL,
    TEXT_COLOR VARCHAR(7) NOT NULL,
    BG_COLOR VARCHAR(7) NOT NULL
);

-- Create Links_To table
CREATE MEMORY TABLE PUBLIC.EXERCISE_TAGS (
    EXERCISE_ID INTEGER NOT NULL,
    TAG_ID INTEGER NOT NULL,
    CONSTRAINT PK_EXERCISE_TAGS PRIMARY KEY (EXERCISE_ID, TAG_ID),
    CONSTRAINT FK_EXERCISE_TAGS_EXERCISE FOREIGN KEY (EXERCISE_ID) REFERENCES PUBLIC.EXERCISE(EXERCISE_ID) ON DELETE CASCADE,
    CONSTRAINT FK_EXERCISE_TAGS_TAGS FOREIGN KEY (TAG_ID) REFERENCES PUBLIC.TAGS(TAG_ID) ON DELETE CASCADE
);

CREATE MEMORY TABLE PUBLIC.WORKOUTPROFILE (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    iconPath VARCHAR(255) DEFAULT NULL
);

-- Table for Workout Items
CREATE MEMORY TABLE PUBLIC.WORKOUT_ITEMS (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
    profileId INTEGER NOT NULL,
    exerciseId INTEGER NOT NULL,
    sets INTEGER NOT NULL,
    reps INTEGER NOT NULL,
    weight DOUBLE NOT NULL,
    time DOUBLE NOT NULL,
    FOREIGN KEY (profileId) REFERENCES WORKOUTPROFILE(id) ON DELETE CASCADE,
    FOREIGN KEY (exerciseId) REFERENCES EXERCISE(EXERCISE_ID) ON DELETE CASCADE
);

-- Workout Session Table
CREATE MEMORY TABLE PUBLIC.WORKOUTSESSION (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY,
    timestamp INTEGER NOT NULL,
    startTime REAL NOT NULL,
    endTime REAL NOT NULL,
    profileId INTEGER NOT NULL,
    FOREIGN KEY (profileId) REFERENCES WORKOUTPROFILE(id) ON DELETE CASCADE
);

-- Session Items
CREATE MEMORY TABLE PUBLIC.SESSION_ITEMS (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    workoutSessionId INTEGER NOT NULL,
    workoutItemId INTEGER NOT NULL,
    reps INTEGER NOT NULL,
    weight DOUBLE DEFAULT NULL,
    time INTEGER NOT NULL,
    FOREIGN KEY (workoutSessionId) REFERENCES WORKOUTSESSION(id) ON DELETE CASCADE,
    FOREIGN KEY (workoutItemId) REFERENCES WORKOUT_ITEMS(id) ON DELETE CASCADE
);