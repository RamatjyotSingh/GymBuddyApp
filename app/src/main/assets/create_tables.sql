-- Drop tables in the correct order to avoid foreign key constraint violations
DROP TABLE IF EXISTS PUBLIC.session_items;
DROP TABLE IF EXISTS PUBLIC.workout_items;
DROP TABLE IF EXISTS PUBLIC.workout_session;
DROP TABLE IF EXISTS PUBLIC.workout_profile;
DROP TABLE IF EXISTS PUBLIC.exercise_tags;
DROP TABLE IF EXISTS PUBLIC.instruction;
DROP TABLE IF EXISTS PUBLIC.exercise;
DROP TABLE IF EXISTS PUBLIC.tags;

-- Exercise table stores exercises with metadata
CREATE TABLE PUBLIC.exercise (
    exercise_id INTEGER NOT NULL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    instructions VARCHAR(500) NOT NULL,
    image_path VARCHAR(255),
    is_time_based BOOLEAN NOT NULL,
    has_weight BOOLEAN NOT NULL
);

-- Tags table for categorizing exercises with colors for UI display
CREATE TABLE PUBLIC.tags (
    tag_id INTEGER NOT NULL PRIMARY KEY,
    tag_name VARCHAR(50) NOT NULL,
    tag_type VARCHAR(20) NOT NULL,
    text_color VARCHAR(7) NOT NULL,
    background_color VARCHAR(7) NOT NULL
);

-- Many-to-many relationship between exercises and tags
CREATE TABLE PUBLIC.exercise_tags (
    exercise_id INTEGER NOT NULL,
    tag_id INTEGER NOT NULL,
    CONSTRAINT pk_exercise_tags PRIMARY KEY (exercise_id, tag_id),
    CONSTRAINT fk_exercise_tags_exercise FOREIGN KEY (exercise_id)
        REFERENCES PUBLIC.exercise (exercise_id) ON DELETE CASCADE,
    CONSTRAINT fk_exercise_tags_tags FOREIGN KEY (tag_id)
        REFERENCES PUBLIC.tags (tag_id) ON DELETE CASCADE
);

-- Workout profiles representing different user-defined workouts
CREATE TABLE PUBLIC.workout_profile (
    profile_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    profile_name VARCHAR(255) NOT NULL,
    icon_path VARCHAR(255) DEFAULT NULL
);

-- Workout items store exercises assigned to workout profiles
CREATE TABLE PUBLIC.workout_items (
    workout_item_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    profile_id INTEGER NOT NULL,
    exercise_id INTEGER NOT NULL,
    sets INTEGER NOT NULL,
    reps INTEGER NOT NULL,
    weight DOUBLE PRECISION,
    duration DOUBLE PRECISION,
    CONSTRAINT fk_workout_items_profile FOREIGN KEY (profile_id)
        REFERENCES PUBLIC.workout_profile (profile_id) ON DELETE CASCADE,
    CONSTRAINT fk_workout_items_exercise FOREIGN KEY (exercise_id)
        REFERENCES PUBLIC.exercise (exercise_id) ON DELETE CASCADE
);

-- Workout session logs past workouts with timestamps
CREATE TABLE PUBLIC.workout_session (
    session_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_time BIGINT NOT NULL,
    end_time BIGINT NOT NULL,
    profile_id INTEGER NOT NULL,
    CONSTRAINT fk_workout_session_profile FOREIGN KEY (profile_id)
        REFERENCES PUBLIC.workout_profile (profile_id) ON DELETE CASCADE
);

-- Session items track individual exercises performed in a session
CREATE TABLE PUBLIC.session_items (
    session_item_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    session_id INTEGER NOT NULL,
    exercise_id INTEGER NOT NULL,
    reps INTEGER NOT NULL,
    weight DOUBLE PRECISION,
    duration INTEGER NOT NULL,
    CONSTRAINT fk_session_items_session FOREIGN KEY (session_id)
        REFERENCES PUBLIC.workout_session (session_id) ON DELETE CASCADE,
    CONSTRAINT fk_session_items_workout_item FOREIGN KEY (workout_item_id)
        REFERENCES PUBLIC.workout_items (workout_item_id) ON DELETE CASCADE
);